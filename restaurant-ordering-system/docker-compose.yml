services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: restaurant_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 10s
      retries: 10
      interval: 30s
      start_period: 40s
    networks:
      - restaurant_network

  # Node.js后端服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: restaurant_backend
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: mysql
      DB_PORT: ${MYSQL_PORT}
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      SESSION_SECRET: ${SESSION_SECRET}
      WECHAT_APP_ID: ${WECHAT_APP_ID}
      WECHAT_APP_SECRET: ${WECHAT_APP_SECRET}
      PORT: ${PORT}
      TZ: Asia/Shanghai
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - restaurant_network

  # Vue.js管理后台服务
  admin:
    build: 
      context: ./admin-web
      dockerfile: Dockerfile
    container_name: restaurant_admin
    environment:
      VUE_APP_API_BASE_URL: ${API_BASE_URL}
      TZ: Asia/Shanghai
    ports:
      - "8080:80"
    depends_on:
      - backend
    volumes:
      - ./admin-web:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - restaurant_network

  # Nginx反向代理服务
  nginx:
    image: nginx:alpine
    container_name: restaurant_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./backend/uploads:/usr/share/nginx/html/uploads:ro
    depends_on:
      - backend
      - admin
    restart: unless-stopped
    networks:
      - restaurant_network

volumes:
  mysql_data:
    driver: local
    
networks:
  restaurant_network:
    driver: bridge